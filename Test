<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="CCMR1012.aspx.cs" Inherits="CRM.CCMR1012" %>

<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="utf-8"/>
  <title>案件列表</title>

  <!-- Bootstrap 5 -->
  <link href="Content/bootstrap.min.css" rel="stylesheet" />
  <script src="Scripts/bootstrap.bundle.min.js"></script>
  <style>
    body{margin:1rem;font-size:16px;}
    .table{table-layout:fixed;word-wrap:break-word;border-color:#b6b6b6;}
    .section-header{font-weight:600;color:#d9534f;}
    .bg-title{background:#eef4ff;text-align: center;vertical-align: middle;}          /* ← 淺色標題底色 */
    .inner-table th,.inner-table td{font-size:16px;padding:.35rem;}
    

    /* 欄寬（保持在同一套 CSS 方便維護） */
    .col-ar   {width:14%;}
    .col-what {width:56%;}
    .col-who  {width:10%;}
    .col-when {width:10%;}
    .col-res  {width:10%;}


    .btn-file{padding:2px 6px;font-size:13px;}

    /* ----------collapse：避免Padding產生空白 ---------- */
    .padding-zero {padding-top: 0 !important;padding-bottom: 0 !important;}

    /* ---------- Hover 聚焦：隨機淡色 ---------- */
    td[data-focus="1"]{transition:background-color .3s;}
    td[data-focus="1"].hovering{background-color:var(--rnd);}

    /* 更滑順：拖過邊緣也有動畫 */
    .table-hover tbody tr:hover > * { transition: background-color .3s; }
  </style>
</head>
<body>
  <div><asp:Label ID="labTitle" runat="server" Text="" Font-Size="25px" ForeColor="Red" Font-Bold="true"></asp:Label></div>
   <br>
  <div id="caseTable"></div>

    
    
  <script>
        // 後端字串已有 HTMLEncode → 這裡直接反序列化
        const caseData = JSON.parse('<%= CaseJson %>');
  </script>

  <script type="module">
      /* =============== 共用工具 =============== */
      const row = (label, v) => `<tr><th class="w-25">${label}</th><td>${v}</td></tr>`;
      const files = list => list.map((f, i) => `<a href="${f.url}" download="${f.name}">
      <button class="btn btn-outline-primary btn-file">
        ${f.name || `檔案${i + 1}`}
      </button></a>`).join('');

      /* =============== 調查分析表格 =============== */
      function analysisTable(lines, fileList) {
          const rs = lines.length, fileBtns = files(fileList);
          let html = `<table class="table table-bordered inner-table mb-2"><tbody>
                  <tr>
                    <th class="bg-light col-ar" style = "text-align: center; vertical-align: middle;" rowspan="${rs}">調查分析</th>
                    <td colspan="4">${lines[0]}</br>${fileBtns}</td>
                  </tr>`;
          for (let i = 1; i < rs; i++) { html += `<tr><td colspan="4">${lines[i]}</td></tr>`; }
          return html + '</tbody></table>';
      }

      /* =============== AR items 表格 =============== */
      function arTable(items) {          
          return `<table id="arTable" class="table table-bordered inner-table mb-0">
         <tbody>
            <tr>
            <th class="section-header" data-bs-toggle="collapse" data-bs-target=".t1" style="background-color: #ffbdd3; vertical-align: middle; height: 40px; padding-left: 0.7rem;">進行中</th>
            </tr>
            <tr>                
                <td><div class="collapse show t1" >${arTableDetail(items, "進行中")}</div></td>
            </tr>
            <tr>
            <th class="section-header" data-bs-toggle="collapse" data-bs-target=".t2" style="background-color: #cfffd9; vertical-align: middle; height: 40px; padding-left: 0.7rem;">已完成</th>
            </tr>
            <tr>                
                <td><div class="collapse t2" >${arTableDetail(items, "已完成")}</div></td>
            </tr>
            <tr>
            <th class="section-header" data-bs-toggle="collapse" data-bs-target=".t3" style="background-color: #d7e7fa; vertical-align: middle; height: 40px; padding-left: 0.7rem;">會議紀錄</th>
            </tr>
            <tr>
                <td><div class="collapse t3" >${arTableDetail(items, "會議紀錄")}</div></td>
            </tr>     
        </tbody>       
      </table>`;
      }

      function arTableDetail(items, resultname) {          
          if (resultname === '進行中') {
              var detail = items.filter(i => i.result === '進行中');
          }     
          if (resultname === '已完成') {
              const stringlist = ['已完成', '取消', '終止']
              var detail = items.filter(i => stringlist.some(lst => i.result === lst) );
          }
          if (resultname === '會議紀錄') {
              var detail = items.filter(i => i.result === "");
          }          

          return `<table id="arTableDtail" class="table table-bordered inner-table mb-0">
        <colgroup>
          <col class="col-ar"><col class="col-what"><col class="col-who">
          <col class="col-when"><col class="col-res">
        </colgroup>
        <thead class="bg-title">
          <tr>
            <th style="background-color: #b7b5b6;color: white;">AR&nbsp;items</th>
            <th style="background-color: #b7b5b6;color: white;">What</th>
            <th style="background-color: #b7b5b6;color: white;">Who</th>
            <th style="background-color: #b7b5b6;color: white;">When</th>
            <th style="background-color: #b7b5b6;color: white;">Result</th>
          </tr>
        </thead>
        <tbody>
          ${detail.map(it => `
            <tr>
              <td class="bg-light bg-title">${it.ar || ''}</td><td>${it.what || ''}</td><td>${it.who || ''}</td>
              <td>${it.when || ''}</td><td>${it.result || ''}</td>
            </tr>`).join('')}
        </tbody>
      </table>`;
      }
      

      /* =============== Summary (含 D6/D7) =============== */
      function summaryTable(items, fileList) {          
          const root = items.find(i => i.type === 'root');
          const fileBtns = files(fileList);
          const groups = items.filter(i => i.section)
              .reduce((m, i) => (m[i.section] = (m[i.section] || []).concat(i), m), {});

          let html = `<table class="table table-bordered inner-table mb-0">
        <colgroup>
          <col class="col-ar"><col class="col-what"><col class="col-who">
          <col class="col-when"><col class="col-res">
        </colgroup><tbody>`;

          if (root) { html += `<tr><th class="bg-light col-ar bg-title">真因</th><td colspan="4">${root.desc}</br>${fileBtns}</td></tr>`; }

          Object.entries(groups).forEach(([sec, rows]) => {
              /* 標題列 */
              html += `<tr class="bg-title">
                 <th class="col-ar bg-light" style = "vertical-align: middle;" rowspan="${rows.length + 1}">${sec}</th>
                 <th style="background-color: #b7b5b6;color: white;">What</th><th style="background-color: #b7b5b6;color: white;">Who</th><th style="background-color: #b7b5b6;color: white;">When</th><th style="background-color: #b7b5b6;color: white;">Result</th>
               </tr>`;
              /* 資料列 */
              rows.forEach(r => {
                  html += `<tr>
                   <td>${r.what || ''}</td><td>${r.who || ''}</td>
                   <td>${r.when || ''}</td><td>${r.result || ''}</td>
                 </tr>`;
              });
          });
          return html + '</tbody></table>';
      }

      /* =============== 整頁渲染 =============== */
      function renderCase(root, d) {
          root.innerHTML = `
        <table class="table table-bordered align-middle" style="border-color:#b6b6b6">
          <tbody>
            ${row('案件日期', d.caseDate)}
            ${row('案件編號', d.caseNum)}
            ${row('案件主旨', d.caseTitle)}
            ${row('異常說明', d.abnormalDesc)}
            ${row('客戶提供資訊', d.customerInfo)}
            ${row('客戶提供檔案', files(d.customerFiles))}

            <!-- 空白行 --------------------------------------------------- -->
            <tr><td colspan="2" style="height:8px;"></td></tr>

            <!-- 內部調查 (D4/D5) ----------------------------------------- -->
            <tr><th colspan="2" class="section-header" data-bs-toggle="collapse" data-bs-target=".td4d5" data-toggle="sum" style="background-color: antiquewhite;">內部調查 (D4/D5)</th></tr>         
            <tr><td colspan="2"><div class="collapse show td4d5">${analysisTable(d.analysis.lines, d.analysis.files)}${arTable(d.internalInvestigation)}</div></td></tr>

            <!-- 內部調查 (總結) ------------------------------------------- -->
            <tr><th colspan="2" class="section-header" data-bs-toggle="collapse" data-bs-target=".tsum" data-toggle="sum" style="background-color: antiquewhite;">內部調查 (總結)</th></tr>
            <tr><td colspan="2" class="padding-zero"><div class="collapse tsum">${summaryTable(d.summary, d.summaryFiles)}</div></td></tr>
          </tbody>
        </table>`;
      }

      window.adjustArTable = function () {
          const tbl = document.getElementById('arTable');
          if (!tbl) return;                       // 沒有表格就結束
          
          const rows = Array.from(tbl.tBodies[0].rows);
          rows.forEach(row => {
             // // 跳過標題列（thead 已經分開）或資料不足的列
             // if (row.cells.length < 5) return;

             // const resultCell = row.cells[4];      // 第 5 欄 (Result)
             // if (resultCell.textContent.trim() !== '') return;   // 有值就無須處理

             // /* ------ a. 在此列「上方」插入空白列，合併所有欄 ------ */
             // const spacer = tbl.insertRow(row.rowIndex);         // rowIndex 會自動排在目前列之前
             // const blank = spacer.insertCell();
             // blank.colSpan = 5;
             // blank.innerHTML = ''; 
             // blank.style = "height:8px;";
             // /* ------ b. 本列：第 2 欄 colspan=4，刪除原本 3,4,5 欄 ------ */
             // const whatCell = row.cells[1];         // 第 2 欄 (What)
             // whatCell.colSpan = 4;                  // 吃掉 3 + 4 + 5 共 4 欄位寬度

             // // 依序移除原第三、四、五欄（注意移一個 index 就會改變）
             // while (row.cells.length > 2) {
             //     row.deleteCell(2);                   // 反覆刪到只剩兩欄
             //}
          });
      };

      /* ==========================================================
       *  fancy features: 折疊 & Hover 聚焦
       * =========================================================*/
      window.addFancyFeatures = function () {
          /* ---------- 隨機淡色 Hover ---------- */
          document.querySelectorAll('td').forEach(td => {
              td.style.transition = 'background-color .3s';

              td.addEventListener('mouseenter', () => {
                  // 1. 先決定哪一個 index (0=r,1=g,2=b) 放 255 與 230
                  const idx255 = Math.floor(Math.random() * 3);              // 0~2
                  let idx230 = Math.floor(Math.random() * 3);
                  while (idx230 === idx255) idx230 = Math.floor(Math.random() * 3);

                  // 2. 組出 [r,g,b]
                  const rgb = [0, 0, 0];
                  rgb[idx255] = 255;
                  rgb[idx230] = 230;

                  // 3. 剩下那個 index 填 230~255 隨機值
                  const idxRand = [0, 1, 2].find(i => i !== idx255 && i !== idx230);
                  rgb[idxRand] = 230 + Math.floor(Math.random() * 25);        // 200-255

                  td.style.backgroundColor = `rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;
              });

              td.addEventListener('mouseleave', () => {
                  td.style.backgroundColor = '';
              });
          });

          /* ---------- 折疊區段 ---------- */
          document.querySelectorAll('th.section-header[data-toggle]')
              .forEach(th => {
                  th.style.cursor = 'pointer';

                  th.addEventListener('click', () => {
                      
                      const type = th.dataset.toggle;           // "investigation" or "summary"
                      const rowsToHide = [];
                      let nextRow = th.parentElement.nextElementSibling.firstElementChild;

                      // 要折疊多少列？
                      const need = (type === 'sum') ? 1 : 0;

                      for (let i = 0; i < need && nextRow; i++) {
                          rowsToHide.push(nextRow);
                          nextRow = nextRow.nextElementSibling;
                      }
                      setTimeout(function () {
                          rowsToHide.forEach(r => r.classList.toggle('padding-zero'));
                      }, 100)                      
                  });
              });


      };

      /* =============== 測試資料 =============== */
      const sampleData = {
          caseDate: '2025/4/10',
          caseNum: '2025030009-1F',
          caseTitle: 'VI客戶型號LT6P7T2R(xxxxx) 測試WAT時特性 BVshift',
          abnormalDesc: 'VIS: 客戶型號 LT6P7T2R (A2 Lots FCS514.1 / FCTN51.1)…',
          customerInfo: 'XXX',
          customerFiles: [{ name: '檔案1', url: '#' }],

          analysis: {
              lines: [
                  '調查結論：分析17點厚度阻值，確認與客戶電性BV有相關，增加17點var%卡控。',
                  '人：正常', '機：正常', '料：正常', '法：正常', '環：正常'
              ],
              files: [{ name: '調查結論檔', url: '#' }]
          },

          internalInvestigation: [
              { ar: '1-AR1', what: '17點厚度阻值分析', who: '蘇庭顥', when: '2025/3/21', result: '完成' },
              { ar: '1-AR2', what: '內部會議紀錄-1', who: '蘇庭顥', when: '2025/3/22', result: '完成' },
              { ar: '外部會議紀錄-1', what: '外部會議紀錄1-AR1', who: '蘇庭顥', when: '2025/3/22', result: '完成' }
          ],

          summary: [
              { type: 'root', desc: '17點厚度均勻性不佳，導致電壓變異度 BV' },
              { section: 'D6', what: '增加 THK 17%var% 卡控', who: '蘇庭顥', when: '2025/3/25', result: '進行中' },
              { section: 'D6', what: '增加 THK 17%var% 卡控', who: '蘇庭顥', when: '2025/3/25', result: '進行中' },
              { section: 'D7', what: 'review 同類型產品，檢查 THK 17%var% 卡控', who: '蘇庭顥', when: '2025/4/30', result: '進行中' },
              { section: 'D7', what: 'review 同類型產品，檢查 THK 17%var% 卡控', who: '蘇庭顥', when: '2025/4/30', result: '進行中' }
          ]
      };

      /* =============== 入口 =============== */
      document.addEventListener('DOMContentLoaded', () => {
          renderCase(
              document.getElementById('caseTable'), caseData);
          window.adjustArTable();
          window.addFancyFeatures();
      });
      
  </script>
</body>
</html>
